<Window x:Class="TradeUpHelper.Views.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TradeUpHelper.Views" xmlns:viewmodels="clr-namespace:TradeUpHelper.ViewModels"
        mc:Ignorable="d"
                xmlns:shell="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        Title="{DynamicResource SettingWindowTitle}" Height="500" Width="700" ResizeMode="NoResize" WindowStyle="None" WindowStartupLocation="CenterScreen">

    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="shell:WindowChrome.WindowChrome">
                <Setter.Value>
                    <shell:WindowChrome CaptionHeight="0"
                                        CornerRadius="0"
                                        GlassFrameThickness="0,0,0,0"
                                        NonClientFrameEdges="None"
                                        ResizeBorderThickness="5"
                                        UseAeroCaptionButtons="false"
                                        />
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/WindowControlButtons.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/TextBoxesStyles.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/LabelsStyles.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/ButtonsStyles.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/MainMenuStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <viewmodels:SettingWindowVM/>
    </Window.DataContext>
    <Border BorderBrush="White" BorderThickness="1">

        <Grid>
            <Grid.Resources>
                <ControlTemplate x:Key="ExitButton" TargetType="{x:Type Button}">
                    <Border   Name="border" Background="Transparent">
                        <ContentPresenter Content="{DynamicResource ExitIco3}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ResourceKey=Color_WindowControlButtonsFocus}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ResourceKey=Color_WindowControlButtonsPressed}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <Grid Grid.Row="0" Background="{DynamicResource Color_WindowTopBar}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Image Source="/TradeUpHelper;component/Resources/Images/setting.png" Margin="5,0,0,0" Width="25" Height="25"/>
                    <Label Content="{DynamicResource SettingWindowTitle}" Margin="5,0,0,0" Foreground="White" FontSize="14" VerticalAlignment="Center"/>
                </StackPanel>
                
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button HorizontalAlignment="Right" Template="{StaticResource ExitButton}" Width="50" Click="Button_Click"/>
                </StackPanel>
            </Grid>
            
            <Grid Grid.Row="1" Background="{DynamicResource Color_WindowBackground}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Header="{DynamicResource SWSteamSetting}" Background="{DynamicResource Color_NewsBlockBackground}" HorizontalAlignment="Stretch" Margin="15,5,15,5" BorderThickness="1" Foreground="White">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <TextBox Text="{Binding SteamInventoryURL}" Style="{DynamicResource SteamInventoryUrlTextBoxStyle}"/>
                        <Button Grid.Row="3" Command="{Binding SaveSettings}" Width="200" Height="30" Content="Save" Margin="0,5,0,0" Background="Transparent" BorderThickness="1" BorderBrush="Silver" FontSize="20" Foreground="White"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Row="1" Header="{DynamicResource SWTheme}" Background="{DynamicResource Color_NewsBlockBackground}" HorizontalAlignment="Stretch" Margin="15,5,15,5" BorderThickness="1" Foreground="White">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Width="30" IsChecked="{Binding IsBlueThemeActive}" Command="{Binding SetBlueTheme}" Height="30" Background="#12043d" Margin="5,5,5,5" Template="{DynamicResource ThemeButton}" GroupName="themes"/>
                        <RadioButton Width="30" IsChecked="{Binding IsPurpleThemeActive}" Command="{Binding SetPurpleTheme}" Height="30" Background="#0f090f" Margin="5,5,5,5" Template="{DynamicResource ThemeButton}" GroupName="themes"/>
                        <RadioButton Width="30" IsChecked="{Binding IsBlackThemeActive}" Command="{Binding SetDarkTheme}" Height="30" Background="#000000" Margin="5,5,5,5" Template="{DynamicResource ThemeButton}" GroupName="themes"/>

                    </StackPanel>


                </GroupBox>
                <GroupBox Grid.Row="2" Header="{DynamicResource SWLanguages}" Background="{DynamicResource Color_NewsBlockBackground}" HorizontalAlignment="Stretch" Margin="15,5,15,5" BorderThickness="1" Foreground="White">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Width="50" IsChecked="{Binding IsEngActive}" Command="{Binding SetEngLanguage}" Height="30" Background="#12043d" Margin="5,5,5,5" Template="{DynamicResource SetEngLanguage}" GroupName="languages"/>
                        <RadioButton Width="50" IsChecked="{Binding IsRusActive}" Command="{Binding SetRusLanguage}" Height="30" Background="#0f090f" Margin="5,5,5,5" Template="{DynamicResource SetRusLanguage}" GroupName="languages"/>

                    </StackPanel>
                </GroupBox>

                <GroupBox Grid.Row="3" Header="{DynamicResource SWCurrency}" Background="{DynamicResource Color_NewsBlockBackground}" HorizontalAlignment="Stretch" Margin="15,5,15,5" BorderThickness="1" Foreground="White">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Width="50" IsChecked="{Binding IsUSDActive}" Command="{Binding SetUSD}" Height="30" Background="#12043d" Margin="5,5,5,5" Template="{DynamicResource SetUSD}" GroupName="currencies"/>
                        <RadioButton Width="50" IsChecked="{Binding IsUAHActive}" Command="{Binding SetUAH}" Height="30" Background="#0f090f" Margin="5,5,5,5" Template="{DynamicResource SetUAH}" GroupName="currencies"/>
                        <RadioButton Width="50" IsChecked="{Binding IsRUBActive}" Command="{Binding SetRUB}" Height="30" Background="#12043d" Margin="5,5,5,5" Template="{DynamicResource SetRUB}" GroupName="currencies"/>

                    </StackPanel>
                </GroupBox>

                <StackPanel Grid.Row="4" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding PermissionToSendErrorLog}" Content="{DynamicResource SWPermissionToSendErrorLogToServer}" Margin="20,20,10,10" Foreground="White"/>
                </StackPanel>

            </Grid>
        </Grid>
        
        
    </Border>
</Window>
